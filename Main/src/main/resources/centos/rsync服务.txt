############ 服务端

1、 安装rsync服务
    rpm -qa|grep rsync
    yum install -y rsync

2、编写配置文件
    man rsyncd.conf
	vim /etc/rsyncd.conf

    ##created by HQ at 2017
    ###rsyncd.conf start##
    # 指定管理备份目录的用户
    uid = rsync
    # 指定管理备份目录的用户组
    gid = rsync
    # 定义rsync备份服务的网络端口号
    port = 873
    # 将rsync虚拟用户伪装成为一个超级管理员用户
    fake super = yes
    # 和安全相关的配置
    use chroot = no
    # 最大连接数  同时只能有200个客户端连接到备份服务器
    max connections = 200
    # 超时时间(单位秒)
    timeout = 300
    # 记录进程号码信息 1.让程序快速停止进程 2. 判断一个服务是否正在运行
    pid file = /var/run/rsyncd.pid
    # 锁文件
    lock file = /var/run/rsync.lock
    # rsync服务的日志文件 用于排错分析问题
    log file = /var/log/rsyncd.log
    # 忽略传输中的简单错误
    ignore errors
    # 指定备份目录是可读可写
    read only = false
    # 使客户端可以查看服务端的模块信息
    list = false
    # 允许传输备份数据的主机(白名单)
    # 设置允许哪些主机可以同步数据，可以是单个IP，也可以是网段，多个IP与网段之间使用空格分隔
    hosts allow = 192.168.232.0/24
    # 禁止传输备份数据的主机(黑名单)
    hosts deny = 0.0.0.0/32
    # 指定认证用户
    auth users = rsync_backup
    # 指定认证用户密码文件 用户名称:密码信息
    secrets file = /etc/rsync.password
    # 模块信息
    [backup]
    comment = "backup dir by ckk"
    # 模块中配置参数 指定备份目录
    path = /backup

3、创建rsync服务的虚拟用户
    用户rsync 没有家目录，也不可以登陆
    useradd rsync -M -s /sbin/nologin


4、创建备份服务认证密码文件
    echo "rsync_backup:ckk123" >/etc/rsync.password
    chmod 600 /etc/rsync.password

5、创建备份目录并修改属主属组信息
    mkdir /backup
    chown rsync.rsync /backup/

6、启动备份服务
    systemctl start rsyncd
    systemctl enable rsyncd
    systemctl status rsyncd


############ 客户端

1、 安装rsync服务
    rpm -qa|grep rsync
    yum install -y rsync

2、创建一个秘密文件
    echo "ckk123" >/etc/rsync.password
    chmod 600 /etc/rsync.password

3、进行免交互传输数据测试
    rsync -avz /etc/hosts rsync_backup@192.168.232.121::backup --password-file=/etc/rsync.password


4、rsync命令参数详细说明
    -v, --verbose     显示详细的传输信息
	-a, --archive     命令的归档参数 包含: rtopgDl
	-r, --recursive   递归参数
	-t, --times       保持文件属性信息时间信息不变(修改时间)
	-o, --owner       保持文件属主信息不变
	-g, --group       保持文件属组信息不变
	PS: 如何让-o和-g参数生效,需要将配置文件uid和gid改为root,需要将 fake super参数进行注释
	-p, --perms       保持文件权限信息不变
	-D,               保持设备文件信息不变
	-l, --links       保持链接文件属性不变
	-L,               保持链接文件数据信息不变
	-P,               显示数据传输的进度信息
	--exclude=PATTERN   排除指定数据不被传输
	--exclude-from=file 排除指定数据不被传输(批量排除)
	--bwlimit=RATE    显示传输的速率  100Mb/8=12.5MB
	                  企业案例:    尽量不要占用所有网络
    --delete          无差异同步参数(慎用)
	                  我有的你也有,我没有的你也不能有



5、需要熟悉rsync守护进程名称语法:
    Access via rsync daemon:
    客户端做拉的操作: 恢复数据
    Pull: rsync [OPTION...] [USER@]HOST::SRC... [DEST]
          rsync [OPTION...] rsync://[USER@]HOST[:PORT]/SRC... [DEST]
    客户端做退的操作: 备份数据
    Push: rsync [OPTION...] SRC... [USER@]HOST::DEST
          src: 要推送备份数据信息
          [USER@]: 指定认证用户信息
          HOST: 指定远程主机的IP地址或者主机名称
          ::DEST: 备份服务器的模块信息

          rsync [OPTION...] SRC... rsync://[USER@]HOST[:PORT]/DEST


6、守护进程服务企业应用:
    a. 守护进程多模块功能配置
	sa  sa_data.txt
	dev dev_data.txt
	dba dba_data.txt
	[backup]
    comment = "backup dir by oldboy"
    path = /backup
    [dba]
    comment = "backup dir by oldboy"
    path = /dba
    [dev]
    comment = "backup dir by oldboy"
    path = /devdata

    b. 守护进程的排除功能实践
	准备环境:
	[root@nfs01 /]# mkdir -p /oldboy
    [root@nfs01 /]# mkdir -p /oldboy/{a..c}
    [root@nfs01 /]# touch /oldboy/{a..c}/{1..3}.txt
    [root@nfs01 /]# tree /oldboy
    /oldboy
    ├── 01.txt
    ├── 02.txt
    ├── a
    │?? ├── 1.txt
    │?? ├── 2.txt
    │?? └── 3.txt
    ├── b
    │?? ├── 1.txt
    │?? ├── 2.txt
    │?? └── 3.txt
    └── c
        ├── 1.txt
        ├── 2.txt
        └── 3.txt

    需求01: 将/oldboy目录下面 a目录数据全部备份 b目录不要备份1.txt文件 c整个目录不要做备份
    --exclude=PATTERN
    绝对路径方式:
    [root@nfs01 /]# rsync -avz /oldboy --exclude=/oldboy/b/1.txt --exclude=/oldboy/c/ rsync_backup@172.16.1.41::backup --password-file=/etc/rsync.password
    sending incremental file list
    oldboy/
    oldboy/01.txt
    oldboy/02.txt
    oldboy/a/
    oldboy/a/1.txt
    oldboy/a/2.txt
    oldboy/a/3.txt
    oldboy/b/
    oldboy/b/2.txt
    oldboy/b/3.txt

    相对路径方式:
	[root@nfs01 /]# rsync -avz /oldboy --exclude=b/1.txt --exclude=c/ rsync_backup@172.16.1.41::backup --password-file=/etc/rsync.password
    sending incremental file list
    oldboy/
    oldboy/01.txt
    oldboy/02.txt
    oldboy/a/
    oldboy/a/1.txt
    oldboy/a/2.txt
    oldboy/a/3.txt
    oldboy/b/
    oldboy/b/2.txt
    oldboy/b/3.txt

    sent 502 bytes  received 177 bytes  1,358.00 bytes/sec
    total size is 0  speedup is 0.00

    需求02: 将/oldboy目录下面 a目录数据全部备份 b目录不要备份1.txt文件 c整个目录1.txt 3.txt文件不要备份
    --exclude-from=file  --- 批量排除
	第一个历程: 编辑好一个排除文件
	[root@nfs01 /]# cat /oldboy/exclude.txt
    b/1.txt
    c/1.txt
    c/3.txt
    exclude.txt

	第二个历程: 实现批量排除功能
	[root@nfs01 /]# rsync -avz /oldboy --exclude-from=/oldboy/exclude.txt rsync_backup@172.16.1.41::backup --password-file=/etc/rsync.password
    sending incremental file list
    oldboy/
    oldboy/01.txt
    oldboy/02.txt
    oldboy/a/
    oldboy/a/1.txt
    oldboy/a/2.txt
    oldboy/a/3.txt
    oldboy/b/
    oldboy/b/2.txt
    oldboy/b/3.txt
    oldboy/c/
    oldboy/c/2.txt

    c. 守护进程来创建备份目录
    [root@nfs01 /]# rsync -avz /etc/hosts  rsync_backup@172.16.1.41::backup/10.0.0.31/ --password-file=/etc/rsync.password
    sending incremental file list
    created directory 10.0.0.31
    hosts

    sent 226 bytes  received 75 bytes  602.00 bytes/sec
    total size is 371  speedup is 1.23
	PS: 客户端无法在服务端创建多级目录

	d. 守护进程的访问控制配置
	守护进程白名单和黑名单功能
	PS: 建议只使用一种名单

	e. 守护进程的列表功能配置 list = true 重启服务端
	[root@nfs01 /]# rsync rsync_backup@172.16.1.41::
    backup         	"backup dir by oldboy"
    dba            	"backup dir by oldboy"
    dev            	"backup dir by oldboy"





