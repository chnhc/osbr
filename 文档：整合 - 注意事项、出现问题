1、 如果新建的 module 是 web 模块
    注意：resource 里 ： templates 是动态页面
                        static 是静态页面
         如果 web 模块有接口，并且 使用@RequestMapping("/echarts")
         那么需要注意： 接口跳转的 templates 的动态页面里，静态资源必须放在 static/echarts 这里！
         例如 Echarts 模块，详情自行查阅！



2、 mybatic mapper易错点：
    出现org.apache.ibatis.binding.BindingException: Invalid bound statement (not found):XXX
    这样错误说明Mapper映射问题
    该项目处理在application-jdbc.yml中：
    配置：
    mybatis:
      mapper-locations: classpath*:mapper/*.xml
    其中配置 classpath* ，将扫描所有的模块的 mapper



3、 security 注意 ：
    在配置configure()设置的 和 接口Controller 注解设置的 role 权限

    configure()设置 ： 通过 过滤器形式  FilterSecurityInterceptor 交付 AccessDecisionManager 进行投票voter鉴权

    Controller注解 设置 ： 通过 AOP 机制在 MethodSecurityInterceptor 交付 AccessDecisionManager 进行投票voter鉴权

    如果同时设置则 将进行两种机制进行鉴权，推荐使用一种方式 或者 重新自定义-过滤器FilterSecurityInterceptor



4、 Security Oauth2 使用 FilterSecurityInterceptor 注意：
    说明： 当前项目，Security与 OAuth2 Resource 使用了自定义 FilterSecurityInterceptor
           OAuth2 Server  还是使用原始的 FilterSecurityInterceptor

    所以： Security与 OAuth2 Resource 配置不需要任何 权限和url ！
          OAuth2 Server 只需要按照原始的配置进行即可！

    配置： Security与 OAuth2 Resource 进行 url和权限 的对应配置



5、 自定义配置文件问题：

    @ConfigurationProperties支持驼峰命名和“-”连接命名生成bean文件，但与配置文件关联的prefix不支持

    配置文件中的foodProperties改为foodproperties，即可解决该错误。



6、自定义配置文件问题：

    该项目 Common 模块 使用了自定义配置文件名 ， 通过实现 EnvironmentPostProcessor 接口，

    META-INF 中 spring.factories 里，重新制定实现类即可




7、AOP切面使用问题：

    如果项目使用切面，并方法是方法内部类，那么注意，需要使用容器调用类方法，

    才能正常被AOP所拦截到，进行切面处理！

    例如： SpringContextUtil.getBean(UserService.class).one();





